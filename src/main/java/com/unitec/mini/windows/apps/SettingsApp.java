/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.unitec.mini.windows.apps;

import com.unitec.mini.windows.logic.FolderStructureCreator;
import com.unitec.mini.windows.logic.User;
import com.unitec.mini.windows.logic.UserManager;
import java.awt.Color;
import java.util.Enumeration;
import java.util.Vector;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author leonel
 */
public class SettingsApp extends JInternalFrame  implements AppInterface{
    DefaultTableModel userTableModel;
    User userAth;


    public SettingsApp(User user) {
        this.userAth = user;
        
        initComponents();
        setComponents();
    }

    public void setComponents(){
        try {
            ImageIcon appIcon = new ImageIcon(getClass().getResource("/images/icons-settings-white.png"));
            this.setFrameIcon(appIcon);
        } catch (Exception e) {
            
        }

        jPanel_Top_Panel.add(jPanel_Unlock_Top);
        
        userTableModel = new DefaultTableModel();
        userTableModel.addColumn("Name");
        userTableModel.addColumn("Username");
        userTableModel.addColumn("Account Type");
        userTableModel.addColumn("Actions");
       
        jTable_User_list.setModel(userTableModel);
        populateUserTable();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Unlock_Top = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton_Unlock = new javax.swing.JButton();
        jPanel_Unlocked_Top = new javax.swing.JPanel();
        jButton_Add_User = new javax.swing.JButton();
        BtnDeleteUser = new javax.swing.JButton();
        BtnEditUser = new javax.swing.JButton();
        jPanel_Add_User = new javax.swing.JPanel();
        jPanel_Main_Add = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jToggleButton_Standard_UserType = new javax.swing.JToggleButton();
        jToggleButton_Administrator_UserType = new javax.swing.JToggleButton();
        jTextField_Username = new javax.swing.JTextField();
        jPasswordField_Pass = new javax.swing.JPasswordField();
        jTextField_name = new javax.swing.JTextField();
        buttonGroup_User_Type = new javax.swing.ButtonGroup();
        jPanel_Top_Panel = new javax.swing.JPanel();
        jPanel_Main = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_User_list = new javax.swing.JTable();

        jPanel_Unlock_Top.setBackground(new java.awt.Color(65, 25, 52));
        jPanel_Unlock_Top.setPreferredSize(new java.awt.Dimension(655, 50));
        jPanel_Unlock_Top.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons-lock.png"))); // NOI18N
        jPanel_Unlock_Top.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel2.setText("Unlock to Add Users and Change Settings");
        jPanel_Unlock_Top.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 6, -1, -1));

        jLabel3.setText("Some settings must be unlocked before they can be changed");
        jPanel_Unlock_Top.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 21, -1, -1));

        jButton_Unlock.setText("Unlock ..");
        jButton_Unlock.setPreferredSize(new java.awt.Dimension(95, 25));
        jButton_Unlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UnlockActionPerformed(evt);
            }
        });
        jPanel_Unlock_Top.add(jButton_Unlock, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, -1, -1));

        jPanel_Unlocked_Top.setBackground(new java.awt.Color(65, 25, 52));
        jPanel_Unlocked_Top.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Unlocked_Top.setPreferredSize(new java.awt.Dimension(655, 50));
        jPanel_Unlocked_Top.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_Add_User.setBackground(new Color(0, 0, 0, 0)
        );
        jButton_Add_User.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons-add-user.png"))); // NOI18N
        jButton_Add_User.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton_Add_User.setBorderPainted(false);
        jButton_Add_User.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Add_UserActionPerformed(evt);
            }
        });
        jPanel_Unlocked_Top.add(jButton_Add_User, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, 30));

        BtnDeleteUser.setBackground(new Color(0, 0, 0, 0));
        BtnDeleteUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons-remove-user.png"))); // NOI18N
        BtnDeleteUser.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        BtnDeleteUser.setBorderPainted(false);
        BtnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteUserActionPerformed(evt);
            }
        });
        jPanel_Unlocked_Top.add(BtnDeleteUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, -1, 30));

        BtnEditUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IconEditUser.png"))); // NOI18N
        BtnEditUser.setBorder(null);
        BtnEditUser.setContentAreaFilled(false);
        BtnEditUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditUserActionPerformed(evt);
            }
        });
        jPanel_Unlocked_Top.add(BtnEditUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 30, 30));

        jPanel_Main_Add.setBorder(javax.swing.BorderFactory.createTitledBorder("User Details"));

        jLabel5.setText("Name");

        jLabel7.setText("Username");

        jLabel8.setText("Password");

        buttonGroup_User_Type.add(jToggleButton_Standard_UserType);
        jToggleButton_Standard_UserType.setSelected(true);
        jToggleButton_Standard_UserType.setText("Standard");

        buttonGroup_User_Type.add(jToggleButton_Administrator_UserType);
        jToggleButton_Administrator_UserType.setText("Administrator");

        javax.swing.GroupLayout jPanel_Main_AddLayout = new javax.swing.GroupLayout(jPanel_Main_Add);
        jPanel_Main_Add.setLayout(jPanel_Main_AddLayout);
        jPanel_Main_AddLayout.setHorizontalGroup(
            jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Main_AddLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addGroup(jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_Main_AddLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(jToggleButton_Standard_UserType, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton_Administrator_UserType)
                        .addGap(44, 44, 44))
                    .addGroup(jPanel_Main_AddLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField_Pass)
                            .addComponent(jTextField_name)
                            .addComponent(jTextField_Username))
                        .addContainerGap())))
        );
        jPanel_Main_AddLayout.setVerticalGroup(
            jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Main_AddLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jPasswordField_Pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel_Main_AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton_Standard_UserType)
                    .addComponent(jToggleButton_Administrator_UserType))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_Add_UserLayout = new javax.swing.GroupLayout(jPanel_Add_User);
        jPanel_Add_User.setLayout(jPanel_Add_UserLayout);
        jPanel_Add_UserLayout.setHorizontalGroup(
            jPanel_Add_UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Add_UserLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel_Main_Add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel_Add_UserLayout.setVerticalGroup(
            jPanel_Add_UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Add_UserLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel_Main_Add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Settings");

        jPanel_Top_Panel.setBackground(new java.awt.Color(65, 25, 52));
        jPanel_Top_Panel.setOpaque(false);
        jPanel_Top_Panel.setPreferredSize(new java.awt.Dimension(100, 60));
        jPanel_Top_Panel.setLayout(new java.awt.CardLayout());

        jPanel_Main.setBackground(new Color(0,0,0,0));

        jScrollPane1.setViewportView(jTable_User_list);

        javax.swing.GroupLayout jPanel_MainLayout = new javax.swing.GroupLayout(jPanel_Main);
        jPanel_Main.setLayout(jPanel_MainLayout);
        jPanel_MainLayout.setHorizontalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel_MainLayout.setVerticalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_MainLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_Top_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                    .addComponent(jPanel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_Top_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_UnlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UnlockActionPerformed
        JPasswordField pf = new JPasswordField(); 
    
        int option = JOptionPane.showConfirmDialog(
                null, 
                pf, 
                "Authentication is required to change user data", 
                JOptionPane.OK_CANCEL_OPTION, 
                JOptionPane.PLAIN_MESSAGE
        );

        if (option == JOptionPane.OK_OPTION) {
            String password = new String(pf.getPassword());
            if (!password.equals(UserManager.getDefaultPassword())) {
                JOptionPane.showMessageDialog(null, "Invalid Password");
                return;
            }

            jPanel_Top_Panel.removeAll();
            jPanel_Top_Panel.add(jPanel_Unlocked_Top);
            jPanel_Top_Panel.repaint();
            jPanel_Top_Panel.revalidate();
        }

    }//GEN-LAST:event_jButton_UnlockActionPerformed

    private void jButton_Add_UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Add_UserActionPerformed
        int option = JOptionPane.showConfirmDialog(
                null, 
                jPanel_Add_User, 
                "Authentication is required to change user data", 
                JOptionPane.OK_CANCEL_OPTION, 
                JOptionPane.PLAIN_MESSAGE
        );
        
        if (option == JOptionPane.OK_OPTION) {
            String name = jTextField_name.getText();
            String username = jTextField_Username.getText();
            String password = String.valueOf(jPasswordField_Pass.getPassword());
            String accountType = "standard";
            AbstractButton selectedButton = getSelectedButton(buttonGroup_User_Type);
            if (selectedButton != null) {
                accountType = selectedButton.getText();
            }
            
            UserManager.initialize();
            User newUser = new User(name, username, password, accountType);
            boolean registrationSuccess = UserManager.registerUser(newUser);
            
            if (!registrationSuccess) {
                JOptionPane.showMessageDialog(null, "User registration failed. Username may already exist.");
                return;
            }
            
            Vector<Object> rowData = new Vector<>();
            rowData.add(newUser.getName());
            rowData.add(newUser.getUsername());
            rowData.add(newUser.getAccountType());
            userTableModel.addRow(rowData);
            
            FolderStructureCreator.createFolderFor(username);
            JOptionPane.showMessageDialog(null, "User registered successfully!");  
        }
    }//GEN-LAST:event_jButton_Add_UserActionPerformed

    private void BtnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteUserActionPerformed
        // TODO add your handling code here:
         int option = JOptionPane.showConfirmDialog(
        null,
        "Are you sure you want to delete the user?",
        "Confirmation",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE
    );

    if (option == JOptionPane.YES_OPTION) {
        // If the user confirms deletion
        String usernameToDelete = JOptionPane.showInputDialog(
            null,
            "Enter the username of the user to delete:",
            "Enter Username",
            JOptionPane.QUESTION_MESSAGE
        );

        if (usernameToDelete != null && !usernameToDelete.isEmpty()) {
            // Attempt to delete the user
            boolean deletionSuccess = UserManager.deleteUser(usernameToDelete);

            if (deletionSuccess) {
                // If deletion is successful
                // Remove the user from the table model

                // Delete the user's folder
                UserManager.deleteUser(usernameToDelete);

                JOptionPane.showMessageDialog(
                    null,
                    "User deleted successfully!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE
                );
            } else {
                // If deletion fails (user not found)
                JOptionPane.showMessageDialog(
                    null,
                    "User deletion failed. User not found.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
                );
            }
        } else {
            // If the user cancels or enters an empty username
            JOptionPane.showMessageDialog(
                null,
                "User deletion cancelled or invalid username.",
                "Cancelled",
                JOptionPane.INFORMATION_MESSAGE
            );
        }
    }
    }//GEN-LAST:event_BtnDeleteUserActionPerformed

    private void BtnEditUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditUserActionPerformed

    JPanel editUserPanel = new JPanel();
    GroupLayout layout = new GroupLayout(editUserPanel);
    editUserPanel.setLayout(layout);
    int option = JOptionPane.showConfirmDialog(
        null,
        "Are you sure you want to edit the user?",
        "Edit the user",
        JOptionPane.OK_CANCEL_OPTION,
        JOptionPane.WARNING_MESSAGE
    );

    if (option == JOptionPane.OK_OPTION){
        String usernameToEdit = getUsernameToEdit(); // Método para obtener el nombre de usuario a editar

        if (usernameToEdit != null && !usernameToEdit.isEmpty()){
            User existingUser = UserManager.getUserByUsername(usernameToEdit);

            if (existingUser != null) {
                String[] newData = promptForNewUserData(existingUser);

                    User newUser = new User(
                    (newData[0] != null) ? newData[0] : existingUser.getName(),
                    (newData[1] != null) ? newData[1] : existingUser.getUsername(),
                    (newData[2] != null) ? newData[2] : existingUser.getPassword(),
                    (newData[3] != null) ? newData[3] : existingUser.getAccountType()
                );

                boolean editSuccess = UserManager.editUser(existingUser, newUser);

                if (editSuccess){
                    JOptionPane.showMessageDialog(
                        null,
                        "User edited successfully!",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE
                    );
                } else {
                    JOptionPane.showMessageDialog(
                        null,
                        "User editing failed.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                    );
                }
            } else {
                JOptionPane.showMessageDialog(
                    null,
                    "User does not exist.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(
                null,
                "User editing cancelled or invalid username.",
                "Cancelled",
                JOptionPane.INFORMATION_MESSAGE
            );
        }
    }
    }//GEN-LAST:event_BtnEditUserActionPerformed
    private String getUsernameToEdit(){
        return JOptionPane.showInputDialog(
        null,
        "Enter the username of the user to edit:",
        "Enter Username",
        JOptionPane.QUESTION_MESSAGE
        );
    }
    
    private String[] promptForNewUserData(User existingUser){
        JPanel userDataPanel = new JPanel();
        GroupLayout layout = new GroupLayout(userDataPanel);
        userDataPanel.setLayout(layout);

        JLabel nameLabel = new JLabel("Enter the new name:");
        JLabel usernameLabel = new JLabel("Enter the new username:");
        JLabel passwordLabel = new JLabel("Enter the new password:");
        JLabel accountTypeLabel = new JLabel("Select the new account type:");

        JTextField nameField = new JTextField(existingUser.getName());
        JTextField usernameField = new JTextField(existingUser.getUsername());
        JPasswordField passwordField = new JPasswordField();
        String[] accountTypes = {"administrator", "standard"};
        JComboBox<String> accountTypeComboBox = new JComboBox<>(accountTypes);
        accountTypeComboBox.setSelectedItem(existingUser.getAccountType());

        layout.setAutoCreateGaps(true);
        layout.setAutoCreateContainerGaps(true);

        GroupLayout.SequentialGroup hGroup = layout.createSequentialGroup();
        hGroup.addGroup(layout.createParallelGroup()
                .addComponent(nameLabel)
                .addComponent(usernameLabel)
                .addComponent(passwordLabel)
                .addComponent(accountTypeLabel));
        hGroup.addGroup(layout.createParallelGroup()
                .addComponent(nameField)
                .addComponent(usernameField)
                .addComponent(passwordField)
                .addComponent(accountTypeComboBox));
        layout.setHorizontalGroup(hGroup);

        GroupLayout.SequentialGroup vGroup = layout.createSequentialGroup();
        vGroup.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(nameLabel)
                .addComponent(nameField));
        vGroup.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(usernameLabel)
                .addComponent(usernameField));
        vGroup.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(passwordLabel)
                .addComponent(passwordField));
        vGroup.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(accountTypeLabel)
                .addComponent(accountTypeComboBox));
        layout.setVerticalGroup(vGroup);

        int option = JOptionPane.showConfirmDialog(
                null,
                userDataPanel,
                "Enter New User Data",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (option == JOptionPane.OK_OPTION) {
            String newName = nameField.getText();
            String newUsername = usernameField.getText();
            char[] newPasswordChars = passwordField.getPassword();
            String newPassword = new String(newPasswordChars);  
            String newAccountType = (String) accountTypeComboBox.getSelectedItem();

            return new String[]{newName, newUsername, newPassword, newAccountType};
        } else {
            // Usuario canceló, devuelve null o maneja según sea necesario
            return null;
        }
}


    private static AbstractButton getSelectedButton(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements(); ) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return button;
            }
        }
        return null;
    }
    
    private void populateUserTable(){
        UserManager.initialize();
        for (User user : UserManager.getAllUsers()) {
            System.out.println(user);
            Vector<Object> rowData = new Vector<>();
            rowData.add(user.getName());
            rowData.add(user.getUsername());
            rowData.add(user.getAccountType());
            rowData.add("");
            userTableModel.addRow(rowData);
        }
    }
    
    @Override
    public void closeFrame() {
        try {
            this.setClosed(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDeleteUser;
    private javax.swing.JButton BtnEditUser;
    private javax.swing.ButtonGroup buttonGroup_User_Type;
    private javax.swing.JButton jButton_Add_User;
    private javax.swing.JButton jButton_Unlock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel_Add_User;
    private javax.swing.JPanel jPanel_Main;
    private javax.swing.JPanel jPanel_Main_Add;
    private javax.swing.JPanel jPanel_Top_Panel;
    private javax.swing.JPanel jPanel_Unlock_Top;
    private javax.swing.JPanel jPanel_Unlocked_Top;
    private javax.swing.JPasswordField jPasswordField_Pass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_User_list;
    private javax.swing.JTextField jTextField_Username;
    private javax.swing.JTextField jTextField_name;
    private javax.swing.JToggleButton jToggleButton_Administrator_UserType;
    private javax.swing.JToggleButton jToggleButton_Standard_UserType;
    // End of variables declaration//GEN-END:variables
}
